{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","dialogs","dialogsItems","messages","message","active","Message","props","react_default","a","createElement","className","classes","DialogItem","path","id","dialog","react_router_dom","to","name","maxLength10","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","requiredField","Dialogs","dialogsElements","dialogsPage","dialogsData","map","dialogData","Dialogs_DialogItem_DialogItem","key","messagesElements","messagesData","messageData","Dialogs_Message_Message","isAuth","addMessage","textareaMessage","react_router","compose","connect","state","dispatch","addMessageActionCreator","withAuthRedirect"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,aAAA,8BAAAC,SAAA,0BAAAC,QAAA,yBAAAC,OAAA,iHCQHC,EANC,SAACC,GACb,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQR,SAAUG,EAAMH,kBCQjCS,EATI,SAACN,GAChB,IAAIO,EAAO,YAAcP,EAAMQ,GAE/B,OACIP,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQI,OAAS,IAAMJ,IAAQP,QAC3CG,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAASC,GAAIJ,GAAOP,EAAMY,iDCoBlCC,EAAcC,YAAiB,IAW7BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,CAVL,SAAChB,GAEpB,OACAC,EAAAC,EAAAC,cAAA,QAAMe,SAAUlB,EAAMmB,aAAcf,UAAWC,IAAQT,UACnDK,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAOC,YAAa,OAAQC,UAAWC,IAAUX,KAAM,kBAAmBY,SAAU,CAACC,IAAeZ,KACpGZ,EAAAC,EAAAC,cAAA,0BAOOuB,EAjCC,SAAC1B,GACb,IAAI2B,EAAkB3B,EAAM4B,YAAYC,YAAYC,IAAK,SAAAC,GAAU,OAAI9B,EAAAC,EAAAC,cAAC6B,EAAD,CAAYC,IAAKF,EAAWvB,GAAII,KAAMmB,EAAWnB,KAAMJ,GAAIuB,EAAWvB,OACzI0B,EAAmBlC,EAAM4B,YAAYO,aAAaL,IAAK,SAAAM,GAAW,OAAInC,EAAAC,EAAAC,cAACkC,EAAD,CAASJ,IAAKG,EAAY5B,GAAIX,QAASuC,EAAYvC,YAM7H,OAAKG,EAAMsC,OAGPrC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQX,SACpBO,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQV,cACnBgC,GAEJO,EACDjC,EAAAC,EAAAC,cAACY,EAAD,CAAqBG,SAZZ,SAACrB,GACdG,EAAMuC,WAAW1C,EAAQ2C,qBAGHvC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAU9B,GAAG,oCCE5B+B,sBACXC,YAdkB,SAACC,GACnB,MAAO,CACHhB,YAAagB,EAAMhB,cAGF,SAACiB,GACtB,MAAO,CACHN,WAAY,SAAC1C,GACTgD,EAASC,YAAwBjD,QAOzCkD,IAFWL,CAGbhB","file":"static/js/4.fb0ff94b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__pRWoF\",\"dialogsItems\":\"Dialogs_dialogsItems__2lIRX\",\"messages\":\"Dialogs_messages__1MIVr\",\"message\":\"Dialogs_message__3dYV1\",\"active\":\"Dialogs_active__1qYdO\"};","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}>{props.message}</div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport { requiredField, maxLengthCreator } from '../../utils/validators/validators';\r\nimport { Textarea } from '../common/FormControls/FormControls';\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements = props.dialogsPage.dialogsData.map( dialogData => <DialogItem key={dialogData.id} name={dialogData.name} id={dialogData.id}/> );\r\n    let messagesElements = props.dialogsPage.messagesData.map( messageData => <Message key={messageData.id} message={messageData.message} /> );\r\n  \r\n    let addMessage = (message) => {\r\n        props.addMessage(message.textareaMessage);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to='/login' />\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            {messagesElements}\r\n            <AddMessageFormRedux onSubmit={addMessage} />\r\n        </div>\r\n    );\r\n}\r\nlet maxLength10 = maxLengthCreator(10);\r\nconst AddMessageForm = (props) => {\r\n    \r\n    return (\r\n    <form onSubmit={props.handleSubmit} className={classes.messages}>\r\n        <Field placeholder={'text'} component={Textarea} name={'textareaMessage'} validate={[requiredField, maxLength10]}/>\r\n        <button>Hello</button>\r\n    </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\r\n\r\nexport default Dialogs;","import { addMessageActionCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from '../../../../../../AppData/Local/Microsoft/TypeScript/3.6/node_modules/redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (message) => {\r\n            dispatch(addMessageActionCreator(message));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n\r\n\r\n "],"sourceRoot":""}