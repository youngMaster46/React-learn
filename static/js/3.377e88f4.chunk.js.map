{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ava","posts","item","React","Component","ProfileStatusWithHooks","props","_useState","useState","_useState2","Object","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","react_default","a","createElement","onDoubleClick","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","_ref","profile","className","classes","src","photos","large","small","lookingForAJobDescription","contacts","facebook","website","vk","ProfileInfo_ProfileStatusWithHooks","Preloader","Post","alt","message","likesCount","MyPosts","memo","postsElements","postsData","map","postsEl","MyPosts_Post_Post","key","id","console","log","AddPostMessageRedux","onSubmit","addPost","addNewPost","maxLength30","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","placeholder","name","validate","requiredField","MyPostsComponent","connect","state","newPostText","profilePage","dispatch","action","addPostActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","MyPostsContainer","store","ProfileContainer","userId","this","match","params","authorizedUserId","getProfile","getStatus","components_Profile_Profile","assign","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.377e88f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"ProfileInfo_ava__mUpOH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__2wfOe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2Nao-\"};","import React from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    activateEditMode = () => {\r\n        \r\n        this.setState({\r\n            editMode: true\r\n        })\r\n        console.log(this);\r\n    }\r\n    deactivateEditMode = () => {\r\n       \r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return <div>\r\n            {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || \"-------\"}</span>\r\n                </div>\r\n            }\r\n            {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} onMouseOut={this.deactivateEditMode} value={this.state.status} />\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useState, useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n        return <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode} >{status || \"-------\"}</span>\r\n                </div>\r\n            }\r\n            { editMode &&\r\n                <div>\r\n                    <input onBlur={deactivateEditMode} onChange={onStatusChange} value={status}/>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    }\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            \r\n            <div className={classes.ava}>\r\n                <img src={profile.photos.large} />\r\n                <br />\r\n                <img src={profile.photos.small} /> \r\n                {profile.lookingForAJobDescription}\r\n                <br />\r\n                facebook: {profile.contacts.facebook}\r\n                <br /> \r\n                website: {profile.contacts.website}\r\n                <br />\r\n                vk: {profile.contacts.vk}\r\n                <br />\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Post.module.css';;\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={classes.item}>\r\n            <img src='https://pbs.twimg.com/profile_images/427365001469235200/6AtFP82E.jpeg'alt='test'/>\r\n            <span>{props.message}</span>\r\n            <span>--Count likes:{props.likesCount}</span>\r\n         </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport { Textarea } from '../../common/FormControls/FormControls';\r\nimport { requiredField, maxLengthCreator } from '../../../utils/validators/validators';\r\n\r\nconst MyPosts = React.memo(props => {\r\n    \r\n    let postsElements = props.postsData.map( postsEl => <Post key={postsEl.id} message={postsEl.message} likesCount={postsEl.likesCount} /> );\r\n\r\n    let addPost = (value) => {\r\n        props.addPost(value.addNewPost);\r\n    }\r\n  console.log('hello')\r\n    return (\r\n       \r\n        <div>\r\n            <h2>My posts</h2>\r\n            <AddPostMessageRedux onSubmit={addPost} />\r\n            <div className={classes.posts}>\r\n                 New post\r\n                 \r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nlet maxLength30 = maxLengthCreator(30);\r\nconst AddPostMessage = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={classes.form}>\r\n            <Field component={Textarea} placeholder='enter your text or message' name='addNewPost' validate={[requiredField, maxLength30]} />\r\n            <button>Submit</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostMessageRedux = reduxForm({form: 'addNewPostMessage'})(AddPostMessage);\r\n\r\nexport default MyPosts;","import { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newPostText: state.profilePage.newPostText,\r\n        postsData: state.profilePage.postsData\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (value) => {\r\n            let action = addPostActionCreator(value);\r\n            dispatch(action);\r\n        },\r\n    }\r\n}\r\nconst MyPostsComponent = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport default MyPostsComponent;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsComponent from './MyPosts/MyPostsContainer';\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsComponent store={props.store}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {getProfile, getStatus, updateStatus} from '../../redux/profile-reducer';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from '../../../../../../AppData/Local/Microsoft/TypeScript/3.6/node_modules/redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getProfile(userId);\r\n        this.props.getStatus(userId);\r\n       \r\n    }\r\n    render() {\r\n        //if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n        return (<Profile {...this.props} profile={this.props.profile}/>)\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}