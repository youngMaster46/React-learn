{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ava","mainPhoto","contacts","error","posts","item","ProfileStatusWithHooks","props","_useState","useState","_useState2","Object","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","react_default","a","createElement","onDoubleClick","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileDataFormReduxForm","reduxForm","form","_ref","profile","handleSubmit","onSubmit","className","classes","createField","Input","type","Textarea","keys","map","key","Contact","_ref2","contactTitle","contactValue","ProfileData","_ref3","isOwner","goToEditMode","onClick","lookingForAJob","lookingForAJobDescription","fullName","aboutMe","ProfileInfo","savePhoto","saveProfile","Preloader","alt","src","photos","large","userPhoto","target","files","length","ProfileInfo_ProfileDataForm","initialValues","formData","then","ProfileInfo_ProfileData","ProfileInfo_Contact","ProfileInfo_ProfileStatusWithHooks","Post","message","likesCount","MyPosts","React","memo","postsElements","postsData","postsEl","MyPosts_Post_Post","id","console","log","AddPostMessageRedux","addPost","addNewPost","maxLength30","maxLengthCreator","Field","component","placeholder","name","validate","requiredField","MyPostsComponent","connect","state","newPostText","profilePage","dispatch","action","addPostActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","MyPostsContainer","store","ProfileContainer","userId","this","match","params","authorizedUserId","getProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","components_Profile_Profile","assign","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.c1fac0c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"ProfileInfo_ava__mUpOH\",\"mainPhoto\":\"ProfileInfo_mainPhoto__1BJfV\",\"contacts\":\"ProfileInfo_contacts__1OArc\",\"error\":\"ProfileInfo_error__3AnyK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__2wfOe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2Nao-\"};","import React, {useState, useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n        return <div>\r\n            { !editMode &&\r\n                <div>\r\n                    Status:\r\n                    <span onDoubleClick={activateEditMode} >{status || \"-------\"}</span>\r\n                </div>\r\n            }\r\n            { editMode &&\r\n                <div>\r\n                    <input onBlur={deactivateEditMode} onChange={onStatusChange} value={status}/>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    }\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport { createField, Input, Textarea } from '../../common/FormControls/FormControls';\r\nimport {reduxForm} from 'redux-form';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\nconst ProfileDataForm = ({ profile, handleSubmit, error }) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        {error && <div className={classes.error}>{error}</div>} \r\n        <div><button>Save</button></div>\r\n        <div><b>FullName</b> {createField(\"Full name\", \"fullName\", [], Input)}</div>\r\n        <div><b>Looking for a job</b> {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}</div>\r\n        <div><b>My professional skills</b> {createField(\"my skills\", \"lookingForAJobDescription\", [], Textarea)}</div>\r\n        <div><b>About me</b> {createField(\"about me\", \"aboutMe\", [], Textarea)}</div>\r\n        <b>Contacts</b>\r\n        {\r\n            Object.keys(profile.contacts).map(key => {\r\n                return <div className={classes.contacts} >\r\n                    <b>{key}</b>\r\n                    {createField(key, \"contacts.\" + key, [], Input)}\r\n                </div>\r\n            })\r\n        }\r\n\r\n    </form>\r\n}\r\nconst ProfileDataFormReduxForm = reduxForm({ form: 'edit-profile' })(ProfileDataForm);\r\nexport default ProfileDataFormReduxForm;\r\n","import React, {useState} from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from '../../../assets/images/default-icon.png';\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n    const onMainPhotoSuccess = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {\r\n        //saveProfile(formData).then( () => {setEditMode(false)} );\r\n        saveProfile(formData).then( () => {\r\n            setEditMode(false);\r\n        });\r\n        \r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <div className={classes.ava}>\r\n\r\n                <img alt='profile' src={profile.photos.large || userPhoto} className={classes.mainPhoto} />\r\n                <br />\r\n                {isOwner && <input type='file' onChange={onMainPhotoSuccess} />}\r\n                \r\n                {editMode ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/> : <ProfileData profile={profile} isOwner={isOwner} \r\n                goToEditMode={()=>{\r\n                    setEditMode(true);\r\n                }}/>}\r\n                \r\n\r\n\r\n                My contacts:<div className={classes.contacts}> \r\n                {\r\n                    Object.keys(profile.contacts).map(key =>\r\n                        <Contact\r\n                            className={classes.contacts}\r\n                            contactTitle={key}\r\n                            contactValue={profile.contacts[key] || ': no'}\r\n                            key={key} />\r\n                    )\r\n                }\r\n                </div>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return <div> <b>{contactTitle}</b>{contactValue}</div>\r\n}\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n       <br />\r\n       {isOwner && <button onClick={goToEditMode} >edit</button>}\r\n                I am looking for a job? {profile.lookingForAJob ? 'yes' : 'no'}\r\n                <br />\r\n                Description: {profile.lookingForAJobDescription ? profile.lookingForAJobDescription : 'no'}\r\n                <br />\r\n                Fullname: {profile.fullName ? profile.fullName : 'no'}\r\n                <br />\r\n                About me: {profile.aboutMe || 'no'}\r\n                <br />\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Post.module.css';;\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={classes.item}>\r\n            <img src='https://pbs.twimg.com/profile_images/427365001469235200/6AtFP82E.jpeg'alt='test'/>\r\n            <span>{props.message}</span>\r\n            <span>--Count likes:{props.likesCount}</span>\r\n         </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport { Textarea } from '../../common/FormControls/FormControls';\r\nimport { requiredField, maxLengthCreator } from '../../../utils/validators/validators';\r\n\r\nconst MyPosts = React.memo(props => {\r\n    \r\n    let postsElements = props.postsData.map( postsEl => <Post key={postsEl.id} message={postsEl.message} likesCount={postsEl.likesCount} /> );\r\n\r\n    let addPost = (value) => {\r\n        props.addPost(value.addNewPost);\r\n    }\r\n  console.log('hello')\r\n    return (\r\n       \r\n        <div>\r\n            <h2>My posts</h2>\r\n            <AddPostMessageRedux onSubmit={addPost} />\r\n            <div className={classes.posts}>\r\n                 New post\r\n                 \r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nlet maxLength30 = maxLengthCreator(30);\r\nconst AddPostMessage = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={classes.form}>\r\n            <Field component={Textarea} placeholder='enter your text or message' name='addNewPost' validate={[requiredField, maxLength30]} />\r\n            <button>Submit</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostMessageRedux = reduxForm({form: 'addNewPostMessage'})(AddPostMessage);\r\n\r\nexport default MyPosts;","import { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newPostText: state.profilePage.newPostText,\r\n        postsData: state.profilePage.postsData\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (value) => {\r\n            let action = addPostActionCreator(value);\r\n            dispatch(action);\r\n        },\r\n    }\r\n}\r\nconst MyPostsComponent = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport default MyPostsComponent;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsComponent from './MyPosts/MyPostsContainer';\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo saveProfile={props.saveProfile} savePhoto={props.savePhoto} isOwner={props.isOwner} profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsComponent store={props.store}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {getProfile, getStatus, updateStatus, savePhoto, saveProfile} from '../../redux/profile-reducer';\r\nimport { compose } from '../../../../../../AppData/Local/Microsoft/TypeScript/3.6/node_modules/redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n       \r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n    render() {\r\n        //if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n        return (<Profile \r\n            {...this.props} \r\n            profile={this.props.profile} \r\n            isOwner={!this.props.match.params.userId}\r\n            savePhoto={this.props.savePhoto}\r\n            saveProfile={this.props.saveProfile}\r\n            />)\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}